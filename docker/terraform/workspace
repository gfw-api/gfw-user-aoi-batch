#!/bin/bash

function select_feature_workspace {

  # get current terraform workspaces
  mapfile -t workspaces < <(terraform workspace list)

  # Check if there is already a workspace called after the current git branch and select it
  # Create workspace if it does not yet exist
  found=false
  for workspace in "${workspaces[@]}"
  do
      w=$(echo "$workspace" | tr -d " \"" | tr -d "*\"")
      if [ "$w" == "$1" ]
      then
        found=true
        break
      fi
  done

  echo "Setting workspace to '$1'"
  if $found
  then
    terraform workspace select "$1"
  else
    terraform workspace new "$1"
  fi
}

# get current git branch and replace / with -
read -r cur_branch < <(git rev-parse --abbrev-ref HEAD | tr "/" "-")

if [ "$cur_branch" == "master" ] || [ "$cur_branch" == "develop" ]
then
  echo "Setting workspace to 'default'"
  terraform workspace select default
else
  select_feature_workspace "$cur_branch"
fi



