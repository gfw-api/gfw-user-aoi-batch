{
  "StartAt": "Create_Cluster",
  "States": {
    "Create_Cluster": {
      "Type": "Task",
      "Resource": "arn:aws:states:::elasticmapreduce:createCluster.sync",
      "Parameters": {
        "Name.$": "$.emr.config.Name",
        "VisibleToAllUsers": true,
        "ReleaseLabel": "emr-5.24.0",
        "ServiceRole.$": "$.emr.config.ServiceRole",
        "JobFlowRole.$": "$.emr.config.JobFlowRole",
        "LogUri.$": "$.emr.config.LogUri",
        "Instances.$": "$.emr.config.Instances",
        "Configurations.$": "$.emr.config.Configurations",
        "Applications.$": "$.emr.config.Applications",
        "Tags.$": "$.emr.config.Tags"
      },
      "ResultPath": "$.emr.create_cluster.output",
      "Next": "Run_Steps"
    },
    "Run_Steps": {
      "Type": "Map",
      "ItemsPath": "$.emr.steps",
      "MaxConcurrency": 1,
      "Parameters": {
        "ClusterId.$": "$.emr.create_cluster.output.ClusterId",
        "Step.$": "$$.Map.Item.Value"
      },
      "Iterator": {
        "StartAt": "Run_Step",
        "States": {
          "Run_Step": {
            "Type": "Task",
            "Resource": "arn:aws:states:::elasticmapreduce:addStep.sync",
            "End": true,
            "Parameters": {
              "ClusterId.$": "$.ClusterId",
              "Step.$": "$.Step"
            }
          }
        }
      },
      "Catch": [ {
        "ErrorEquals": [ "States.ALL" ],
        "Next": "Terminate_Cluster"
      } ],
      "Next": "Terminate_Cluster"
    },
    "Terminate_Cluster": {
      "Type": "Task",
      "Resource": "arn:aws:states:::elasticmapreduce:terminateCluster.sync",
      "Parameters": {
        "ClusterId.$": "$.emr.output.ClusterId"
      },
      "Retry": [ {
         "ErrorEquals": [ "States.ALL" ],
         "IntervalSeconds": 60,
         "MaxAttempts": 3,
         "BackoffRate": 2
      } ],
      "Next": "Upload_Results"
    },
    "Upload_Results": {
      "Type": "Task",
      "Resource": "${lambda_upload_results_arn}",
      "InputPath": "$",
      "ResultPath": "$",
      "Next": "Wait_For_Upload"
    },
    "Wait_For_Upload": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "Check_Upload_Success"
    },
    "Check_Upload_Success": {
      "Type": "Task",
      "Resource": "${lambda_check_dataset_arn}",
      "InputPath": "$",
      "ResultPath": "$",
      "Next": "Datasets Saved?"
    },
    "Datasets Saved?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "SUCCESS",
          "Next": "Success"
        },
        {
          "Variable": "$.status",
          "StringEquals": "FAILED",
          "Next": "Dataset Save Failed"
        },
        {
          "Variable": "$.status",
          "StringEquals": "PENDING",
          "Next": "Wait_For_Upload"
        }
      ],
      "Default": "Wait_For_Upload"
    },
    "Dataset Save Failed": {
      "Type": "Fail",
      "Cause": "Failed to save results in dataset.",
      "Error": "DatasetSaveFailed"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}