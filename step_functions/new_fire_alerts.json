{
  "StartAt": "Get Latest Fire Alerts",
  "States": {
    "Get Latest Fire Alerts": {
      "Type": "Task",
      "Resource": "${lambda_get_latest_fire_alerts_arn}",
      "InputPath": "$",
      "ResultPath": "$",
      "Next": "Run GeoTrellis Summary Updates"
    },
    "Run GeoTrellis Summary Updates": {
      "Type": "Parallel",
      "ResultPath": "$",
      "Branches": [
        {
          "StartAt": "Run Geotrellis Summary Update GADM - VIIRS",
          "States": {
            "Run Geotrellis Summary Update GADM - VIIRS": {
              "Type": "Task",
              "End": true,
              "ResultPath": "$.viirs_all",
              "Resource": "arn:aws:states:::states:startExecution.sync",
              "Parameters": {
                "StateMachineArn": "${state_machine_arn}",
                "Input": {
                   "Input.$": "$.viirs.gadm"
                }
              },
              "Catch": [{
                "ErrorEquals": [ "States.TaskFailed" ],
                "ResultPath": "$.error",
                "Next": "Stop Gracefully GADM VIIRS"
              }]
            },
            "Stop Gracefully GADM VIIRS": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "Run Geotrellis Summary Update GADM - MODIS",
          "States": {
            "Run Geotrellis Summary Update GADM - MODIS": {
              "Type": "Task",
              "End": true,
              "Resource": "arn:aws:states:::states:startExecution.sync",
              "Parameters": {
                "StateMachineArn": "${state_machine_arn}",
                "Input": {
                   "Input.$": "$.modis.gadm"
                }
              },
              "Catch": [{
                "ErrorEquals": [ "States.TaskFailed" ],
                "ResultPath": "$.error",
                "Next": "Stop Gracefully GADM MODIS"
              }]
            },
            "Stop Gracefully GADM MODIS": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "Run Geotrellis Summary Update WDPA - VIIRS",
          "States": {
            "Run Geotrellis Summary Update WDPA - VIIRS": {
              "Type": "Task",
              "End": true,
              "Resource": "arn:aws:states:::states:startExecution.sync",
              "Parameters": {
                "StateMachineArn": "${state_machine_arn}",
                "Input": {
                   "Input.$": "$.viirs.wdpa"
                }
              },
              "Catch": [{
                "ErrorEquals": [ "States.TaskFailed" ],
                "ResultPath": "$.error",
                "Next": "Stop Gracefully WDPA VIIRS"
              }]
            },
            "Stop Gracefully WDPA VIIRS": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "Run Geotrellis Summary Update WDPA - MODIS",
          "States": {
            "Run Geotrellis Summary Update WDPA - MODIS": {
              "Type": "Task",
              "End": true,
              "Resource": "arn:aws:states:::states:startExecution.sync",
              "Parameters": {
                "StateMachineArn": "${state_machine_arn}",
                "Input": {
                   "Input.$": "$.modis.wdpa"
                }
              },
              "Catch": [{
                "ErrorEquals": [ "States.TaskFailed" ],
                "ResultPath": "$.error",
                "Next": "Stop Gracefully WDPA MODIS"
              }]
            },
            "Stop Gracefully WDPA MODIS": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "Run Geotrellis Summary Update Geostore - VIIRS",
          "States": {
            "Run Geotrellis Summary Update Geostore - VIIRS": {
              "Type": "Task",
              "End": true,
              "Resource": "arn:aws:states:::states:startExecution.sync",
              "Parameters": {
                "StateMachineArn": "${state_machine_arn}",
                "Input": {
                   "Input.$": "$.viirs.geostore"
                }
              },
              "Catch": [{
                "ErrorEquals": [ "States.TaskFailed" ],
                "ResultPath": "$.error",
                "Next": "Stop Gracefully Geostore VIIRS"
              }]
            },
            "Stop Gracefully Geostore VIIRS": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "Run Geotrellis Summary Update Geostore - MODIS",
          "States": {
            "Run Geotrellis Summary Update Geostore - MODIS": {
              "Type": "Task",
              "End": true,
              "Resource": "arn:aws:states:::states:startExecution.sync",
              "Parameters": {
                "StateMachineArn": "${state_machine_arn}",
                "Input": {
                   "Input.$": "$.modis.geostore"
                }
              },
              "Catch": [{
                "ErrorEquals": [ "States.TaskFailed" ],
                "ResultPath": "$.error",
                "Next": "Stop Gracefully Geostore MODIS"
              }]
            },
            "Stop Gracefully Geostore MODIS": {
              "Type": "Succeed"
            }
          }
        }
      ],
      "Next": "Inject Fires Data"
    },
    "Inject Fires Data": {
      "Type": "Task",
      "Resource": "${lambda_inject_fires_data_arn}",
      "InputPath": "$.viirs_all",
      "ResultPath": "$",
      "Next": "Was Injection Successful?"
    },
    "Was Injection Successful?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "SUCCESS",
          "Next": "Successfully Updated"
        },
        {
          "Variable": "$.status",
          "StringEquals": "FAILED",
          "Next": "Failed"
        },
        {
          "Variable": "$.status",
          "StringEquals": "PENDING",
          "Next": "Wait For Injection"
        }
      ],
      "Default": "Wait For Injection"
    },
    "Wait For Injection": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "Inject Fires Data"
    },
    "Successfully Updated": {
      "Type": "Succeed"
    },
    "Failed": {
      "Type": "Fail",
      "Cause": "Failed.",
      "Error": "Failed"
    }
  }
}